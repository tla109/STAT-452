all.MSPEs[i, "LASSO-1se"] <- MSPE.LASSO.1se
}
knitr::opts_chunk$set(echo = TRUE)
### Fit polynomial regression models
fit.poly.3 <- lm(Ozone ~ poly(Temp, degree = 3), data = AQ)
Temp.sort <- AQ.frame(Temp = sort(AQ$density))
Temp.sort <- data.frame(Temp = sort(AQ$density))
Temp.sort
### Read in the wine data
source("Read_Wine_Data.R")
### We will use functions from the splines package to fit spline models
library(splines)
### Fit polynomial regression models
fit.poly.1 <- lm(alcohol ~ density, data = data)
fit.poly.2 <- lm(alcohol ~ poly(density, degree = 2), data = data)
fit.poly.4 <- lm(alcohol ~ poly(density, degree = 4), data = data)
fit.poly.12 <- lm(alcohol ~ poly(density, degree = 12), data = data)
### Get predictions.
### Note: For plotting to work properly, we need to get predictions
###       on the sorted density values.
density.sort <- data.frame(density = sort(data$density))
pred.poly.1 <- predict(fit.poly.1, density.sort)
density.sort
Temp.sort <- data.frame(Temp = sort(AQ$Temp))
Temp.sort
lines(Temp.sort$Temp, pred.poly.3)
### Predicting
Temp.sort <- data.frame(Temp = sort(AQ$Temp))
pred.poly.3 <- predict(fit.poly.3, Temp.sort)
pred.basis.5 <- predict(fit.basis.5, Temp.sort)
### Fit basis splines
fit.basis.5 <- lm(Ozone ~ bs(Temp, degree = 5), data = AQ)
fit.basis.7 <- lm(Ozone ~ bs(Temp, degree = 7), data = AQ)
fit.basis.9 <- lm(Ozone ~ bs(Temp, degree = 9), data = AQ)
fit.basis.20 <- lm(Ozone ~ bs(Temp, degree = 20), data = AQ)
### Predicting
Temp.sort <- data.frame(Temp = sort(AQ$Temp))
pred.poly.3 <- predict(fit.poly.3, Temp.sort)
pred.basis.5 <- predict(fit.basis.5, Temp.sort)
pred.basis.7 <- predict(fit.basis.7, Temp.sort)
pred.basis.9 <- predict(fit.basis.9, Temp.sort)
pred.basis.20 <- predict(fit.basis.20, Temp.sort)
### Plots
with(AQ, plot(Temp, Ozone))
lines(Temp.sort$Temp, pred.poly.3)
### Plots
with(AQ, plot(Temp, Ozone))
lines(Temp.sort$Temp, pred.poly.3)
### Fit polynomial regression models
fit.poly.1 <- lm(alcohol ~ density, data = data)
fit.poly.2 <- lm(alcohol ~ poly(density, degree = 2), data = data)
fit.poly.4 <- lm(alcohol ~ poly(density, degree = 4), data = data)
fit.poly.12 <- lm(alcohol ~ poly(density, degree = 12), data = data)
### Get predictions.
### Note: For plotting to work properly, we need to get predictions
###       on the sorted density values.
density.sort <- data.frame(density = sort(data$density))
pred.poly.1 <- predict(fit.poly.1, density.sort)
pred.poly.2 <- predict(fit.poly.2, density.sort)
pred.poly.4 <- predict(fit.poly.4, density.sort)
pred.poly.12 <- predict(fit.poly.12, density.sort)
### Plot data and predictions on the same axes
with(data, plot(density, alcohol))
lines(density.sort$density, pred.poly.1)
### Fit polynomial regression models
fit.poly.3 <- lm(Ozone ~ poly(Temp, degree = 3), data = AQ)
### Fit basis splines
fit.basis.5 <- lm(Ozone ~ bs(Temp, degree = 5), data = AQ)
fit.basis.7 <- lm(Ozone ~ bs(Temp, degree = 7), data = AQ)
fit.basis.9 <- lm(Ozone ~ bs(Temp, degree = 9), data = AQ)
fit.basis.20 <- lm(Ozone ~ bs(Temp, degree = 20), data = AQ)
### Predicting
Temp.sort <- data.frame(Temp = sort(AQ$Temp))
pred.poly.3 <- predict(fit.poly.3, Temp.sort)
pred.basis.5 <- predict(fit.basis.5, Temp.sort)
pred.basis.7 <- predict(fit.basis.7, Temp.sort)
pred.basis.9 <- predict(fit.basis.9, Temp.sort)
pred.basis.20 <- predict(fit.basis.20, Temp.sort)
### Plots
with(AQ, plot(Temp, Ozone))
lines(Temp.sort$Temp, pred.poly.3)
lines(Temp.sort$Temp, pred.poly.5, col = 'red')
### Fit polynomial regression models
fit.poly.3 <- lm(Ozone ~ poly(Temp, degree = 3), data = AQ)
### Fit basis splines
fit.basis.5 <- lm(Ozone ~ bs(Temp, degree = 5), data = AQ)
fit.basis.7 <- lm(Ozone ~ bs(Temp, degree = 7), data = AQ)
fit.basis.9 <- lm(Ozone ~ bs(Temp, degree = 9), data = AQ)
fit.basis.20 <- lm(Ozone ~ bs(Temp, degree = 20), data = AQ)
### Predicting
Temp.sort <- data.frame(Temp = sort(AQ$Temp))
pred.poly.3 <- predict(fit.poly.3, Temp.sort)
pred.basis.5 <- predict(fit.basis.5, Temp.sort)
pred.basis.7 <- predict(fit.basis.7, Temp.sort)
pred.basis.9 <- predict(fit.basis.9, Temp.sort)
pred.basis.20 <- predict(fit.basis.20, Temp.sort)
### Plots
with(AQ, plot(Temp, Ozone))
lines(Temp.sort$Temp, pred.poly.3)
lines(Temp.sort$Temp, pred.basis.5, col = 'red')
lines(Temp.sort$Temp, pred.basis.7, col = 'blue')
lines(Temp.sort$Temp, pred.basis.9, col = 'green')
lines(Temp.sort$Temp, pred.basis.20, col = 'yellow')
legend(
x = 18300, y = 170, legend = c(
"Cubic poly", "Cubic Spline 5 df",
"Cubic Spline 7 df", "Cubic Spline 9 df, Cubic Spline 20 df"
),
lty = "solid", lwd = 2
)
### Fit polynomial regression models
fit.poly.3 <- lm(Ozone ~ poly(Temp, degree = 3), data = AQ)
### Fit basis splines
fit.basis.5 <- lm(Ozone ~ bs(Temp, degree = 5), data = AQ)
fit.basis.7 <- lm(Ozone ~ bs(Temp, degree = 7), data = AQ)
fit.basis.9 <- lm(Ozone ~ bs(Temp, degree = 9), data = AQ)
fit.basis.20 <- lm(Ozone ~ bs(Temp, degree = 20), data = AQ)
### Predicting
Temp.sort <- data.frame(Temp = sort(AQ$Temp))
pred.poly.3 <- predict(fit.poly.3, Temp.sort)
pred.basis.5 <- predict(fit.basis.5, Temp.sort)
pred.basis.7 <- predict(fit.basis.7, Temp.sort)
pred.basis.9 <- predict(fit.basis.9, Temp.sort)
pred.basis.20 <- predict(fit.basis.20, Temp.sort)
### Plots
with(AQ, plot(Temp, Ozone))
lines(Temp.sort$Temp, pred.poly.3)
lines(Temp.sort$Temp, pred.basis.5, col = 'red')
lines(Temp.sort$Temp, pred.basis.7, col = 'blue')
lines(Temp.sort$Temp, pred.basis.9, col = 'green')
lines(Temp.sort$Temp, pred.basis.20, col = 'yellow')
legend(
x = 18300, y = 170, legend = c(
"Cubic poly", "Cubic Spline 5 df",
"Cubic Spline 7 df", "Cubic Spline 9 df, Cubic Spline 20 df"
),
lty = "solid", lwd = 2
)
### Fit polynomial regression models
fit.poly.3 <- lm(Ozone ~ poly(Temp, degree = 3), data = AQ)
### Fit basis splines
fit.basis.5 <- lm(Ozone ~ bs(Temp, degree = 5), data = AQ)
fit.basis.7 <- lm(Ozone ~ bs(Temp, degree = 7), data = AQ)
fit.basis.9 <- lm(Ozone ~ bs(Temp, degree = 9), data = AQ)
fit.basis.20 <- lm(Ozone ~ bs(Temp, degree = 20), data = AQ)
### Predicting
Temp.sort <- data.frame(Temp = sort(AQ$Temp))
pred.poly.3 <- predict(fit.poly.3, Temp.sort)
pred.basis.5 <- predict(fit.basis.5, Temp.sort)
pred.basis.7 <- predict(fit.basis.7, Temp.sort)
pred.basis.9 <- predict(fit.basis.9, Temp.sort)
pred.basis.20 <- predict(fit.basis.20, Temp.sort)
### Plots
with(AQ, plot(Temp, Ozone))
lines(Temp.sort$Temp, pred.poly.3)
lines(Temp.sort$Temp, pred.basis.5, col = 'red')
lines(Temp.sort$Temp, pred.basis.7, col = 'blue')
lines(Temp.sort$Temp, pred.basis.9, col = 'green')
lines(Temp.sort$Temp, pred.basis.20, col = 'yellow')
legend(legend = c(
"Cubic poly", "Cubic Spline 5 df",
"Cubic Spline 7 df", "Cubic Spline 9 df, Cubic Spline 20 df"
),
lty = "solid", lwd = 2
)
?legend
setwd("C:/Users/Terry Liu/Desktop/STAT 452/Class Examples")
covid <- read.csv("Covid-BC-2020-09-22.csv", header = TRUE)
covid$date <- as.Date(covid$Date, "%Y-%m-%d")
head(covid)
summary(covid)
# Plot of data
plot(x = covid$date, y = covid$Cases,
type = "l", main = "Plot of Daily BC Covid-19 Cases over time")
##################################################################
# Plot with added polynomials
plot(
x = covid$date, y = covid$Cases, type = "l", col = "gray",
main = "Plot of Daily BC Covid-19 Cases over time"
)
# Adding legend to the plot.  Note that "as.numeric(covid$date)"
#   shows that dates are represented numerically by numbers
#   ranging from 18287 to 18527, so putting legend corner at 18300
legend(
x = 18300, y = 170,
legend = c("3rd order poly", "6th order poly",
"9th order poly", "12th order poly"), lty = "solid",
col = colors()[c(24, 121, 145, 84)], lwd = 2
)
# Add cubic polynomial to plot (3 df model)
poly3 <- lm(data = covid, Cases ~ poly(x = date, degree = 3))
summary(poly3)
lines(x = covid$date, y = predict(poly3, newdata = covid), col = colors()[24], lwd = 2)
covid <- read.csv("Covid-BC-2020-09-22.csv", header = TRUE)
covid$date <- as.Date(covid$Date, "%Y-%m-%d")
head(covid)
summary(covid)
# Plot of data
plot(x = covid$date, y = covid$Cases,
type = "l", main = "Plot of Daily BC Covid-19 Cases over time")
##################################################################
# Plot with added polynomials
plot(
x = covid$date, y = covid$Cases, type = "l", col = "gray",
main = "Plot of Daily BC Covid-19 Cases over time"
)
# Adding legend to the plot.  Note that "as.numeric(covid$date)"
#   shows that dates are represented numerically by numbers
#   ranging from 18287 to 18527, so putting legend corner at 18300
legend(
x = 18300, y = 170,
legend = c("3rd order poly", "6th order poly",
"9th order poly", "12th order poly"), lty = "solid",
col = colors()[c(24, 121, 145, 84)], lwd = 2
)
### Fit polynomial regression models
fit.poly.3 <- lm(Ozone ~ poly(Temp, degree = 3), data = AQ)
### Fit basis splines
fit.basis.5 <- lm(Ozone ~ bs(Temp, degree = 5), data = AQ)
fit.basis.7 <- lm(Ozone ~ bs(Temp, degree = 7), data = AQ)
fit.basis.9 <- lm(Ozone ~ bs(Temp, degree = 9), data = AQ)
fit.basis.20 <- lm(Ozone ~ bs(Temp, degree = 20), data = AQ)
### Predicting
Temp.sort <- data.frame(Temp = sort(AQ$Temp))
pred.poly.3 <- predict(fit.poly.3, Temp.sort)
pred.basis.5 <- predict(fit.basis.5, Temp.sort)
pred.basis.7 <- predict(fit.basis.7, Temp.sort)
pred.basis.9 <- predict(fit.basis.9, Temp.sort)
pred.basis.20 <- predict(fit.basis.20, Temp.sort)
### Plots
with(AQ, plot(Temp, Ozone))
lines(Temp.sort$Temp, pred.poly.3)
lines(Temp.sort$Temp, pred.basis.5, col = 'red')
lines(Temp.sort$Temp, pred.basis.7, col = 'blue')
lines(Temp.sort$Temp, pred.basis.9, col = 'green')
lines(Temp.sort$Temp, pred.basis.20, col = 'yellow')
legend(x = 0, y = 10, legend = c(
"Cubic poly", "Cubic Spline 5 df",
"Cubic Spline 7 df", "Cubic Spline 9 df, Cubic Spline 20 df"
),
lty = "solid", lwd = 2
)
### Fit polynomial regression models
fit.poly.3 <- lm(Ozone ~ poly(Temp, degree = 3), data = AQ)
### Fit basis splines
fit.basis.5 <- lm(Ozone ~ bs(Temp, degree = 5), data = AQ)
fit.basis.7 <- lm(Ozone ~ bs(Temp, degree = 7), data = AQ)
fit.basis.9 <- lm(Ozone ~ bs(Temp, degree = 9), data = AQ)
fit.basis.20 <- lm(Ozone ~ bs(Temp, degree = 20), data = AQ)
### Predicting
Temp.sort <- data.frame(Temp = sort(AQ$Temp))
pred.poly.3 <- predict(fit.poly.3, Temp.sort)
pred.basis.5 <- predict(fit.basis.5, Temp.sort)
pred.basis.7 <- predict(fit.basis.7, Temp.sort)
pred.basis.9 <- predict(fit.basis.9, Temp.sort)
pred.basis.20 <- predict(fit.basis.20, Temp.sort)
### Plots
with(AQ, plot(Temp, Ozone))
lines(Temp.sort$Temp, pred.poly.3)
lines(Temp.sort$Temp, pred.basis.5, col = 'red')
lines(Temp.sort$Temp, pred.basis.7, col = 'blue')
lines(Temp.sort$Temp, pred.basis.9, col = 'green')
lines(Temp.sort$Temp, pred.basis.20, col = 'yellow')
legend(x = 0, y = 10, legend = c(
"Cubic poly", "Cubic Spline 5 df",
"Cubic Spline 7 df", "Cubic Spline 9 df, Cubic Spline 20 df"
),
lty = "solid", lwd = 2
)
### Fit polynomial regression models
fit.poly.3 <- lm(Ozone ~ poly(Temp, degree = 3), data = AQ)
### Fit basis splines
fit.basis.5 <- lm(Ozone ~ bs(Temp, degree = 5), data = AQ)
fit.basis.7 <- lm(Ozone ~ bs(Temp, degree = 7), data = AQ)
fit.basis.9 <- lm(Ozone ~ bs(Temp, degree = 9), data = AQ)
fit.basis.20 <- lm(Ozone ~ bs(Temp, degree = 20), data = AQ)
### Predicting
Temp.sort <- data.frame(Temp = sort(AQ$Temp))
pred.poly.3 <- predict(fit.poly.3, Temp.sort)
pred.basis.5 <- predict(fit.basis.5, Temp.sort)
pred.basis.7 <- predict(fit.basis.7, Temp.sort)
pred.basis.9 <- predict(fit.basis.9, Temp.sort)
pred.basis.20 <- predict(fit.basis.20, Temp.sort)
### Plots
with(AQ, plot(Temp, Ozone))
lines(Temp.sort$Temp, pred.poly.3)
lines(Temp.sort$Temp, pred.basis.5, col = 'red')
lines(Temp.sort$Temp, pred.basis.7, col = 'blue')
lines(Temp.sort$Temp, pred.basis.9, col = 'green')
lines(Temp.sort$Temp, pred.basis.20, col = 'yellow')
legend(x = 50, y = 10, legend = c(
"Cubic poly", "Cubic Spline 5 df",
"Cubic Spline 7 df", "Cubic Spline 9 df, Cubic Spline 20 df"
),
lty = "solid", lwd = 2
)
### Fit polynomial regression models
fit.poly.3 <- lm(Ozone ~ poly(Temp, degree = 3), data = AQ)
### Fit basis splines
fit.basis.5 <- lm(Ozone ~ bs(Temp, degree = 5), data = AQ)
fit.basis.7 <- lm(Ozone ~ bs(Temp, degree = 7), data = AQ)
fit.basis.9 <- lm(Ozone ~ bs(Temp, degree = 9), data = AQ)
fit.basis.20 <- lm(Ozone ~ bs(Temp, degree = 20), data = AQ)
### Predicting
Temp.sort <- data.frame(Temp = sort(AQ$Temp))
pred.poly.3 <- predict(fit.poly.3, Temp.sort)
pred.basis.5 <- predict(fit.basis.5, Temp.sort)
pred.basis.7 <- predict(fit.basis.7, Temp.sort)
pred.basis.9 <- predict(fit.basis.9, Temp.sort)
pred.basis.20 <- predict(fit.basis.20, Temp.sort)
### Plots
with(AQ, plot(Temp, Ozone))
lines(Temp.sort$Temp, pred.poly.3)
lines(Temp.sort$Temp, pred.basis.5, col = 'red')
lines(Temp.sort$Temp, pred.basis.7, col = 'blue')
lines(Temp.sort$Temp, pred.basis.9, col = 'green')
lines(Temp.sort$Temp, pred.basis.20, col = 'yellow')
legend(x = 60, y = 150, legend = c(
"Cubic poly", "Cubic Spline 5 df",
"Cubic Spline 7 df", "Cubic Spline 9 df, Cubic Spline 20 df"
),
lty = "solid", lwd = 2
)
covid <- read.csv("Covid-BC-2020-09-22.csv", header = TRUE)
covid$date <- as.Date(covid$Date, "%Y-%m-%d")
head(covid)
summary(covid)
# Plot of data
plot(x = covid$date, y = covid$Cases,
type = "l", main = "Plot of Daily BC Covid-19 Cases over time")
##################################################################
# Plot with added polynomials
plot(
x = covid$date, y = covid$Cases, type = "l", col = "gray",
main = "Plot of Daily BC Covid-19 Cases over time"
)
# Adding legend to the plot.  Note that "as.numeric(covid$date)"
#   shows that dates are represented numerically by numbers
#   ranging from 18287 to 18527, so putting legend corner at 18300
legend(
x = 18300, y = 170,
legend = c("3rd order poly", "6th order poly",
"9th order poly", "12th order poly"), lty = "solid",
col = colors()[c(24, 121, 145, 84)], lwd = 2
)
# Add cubic polynomial to plot (3 df model)
poly3 <- lm(data = covid, Cases ~ poly(x = date, degree = 3))
summary(poly3)
lines(x = covid$date, y = predict(poly3, newdata = covid), col = colors()[24], lwd = 2)
### Fit polynomial regression models
fit.poly.3 <- lm(Ozone ~ poly(Temp, degree = 3), data = AQ)
### Fit basis splines
fit.basis.5 <- lm(Ozone ~ bs(Temp, degree = 5), data = AQ)
fit.basis.7 <- lm(Ozone ~ bs(Temp, degree = 7), data = AQ)
fit.basis.9 <- lm(Ozone ~ bs(Temp, degree = 9), data = AQ)
fit.basis.20 <- lm(Ozone ~ bs(Temp, degree = 20), data = AQ)
### Predicting
Temp.sort <- data.frame(Temp = sort(AQ$Temp))
pred.poly.3 <- predict(fit.poly.3, Temp.sort)
pred.basis.5 <- predict(fit.basis.5, Temp.sort)
pred.basis.7 <- predict(fit.basis.7, Temp.sort)
pred.basis.9 <- predict(fit.basis.9, Temp.sort)
pred.basis.20 <- predict(fit.basis.20, Temp.sort)
### Plots
with(AQ, plot(Temp, Ozone))
lines(Temp.sort$Temp, pred.poly.3)
lines(Temp.sort$Temp, pred.basis.5, col = 'red')
lines(Temp.sort$Temp, pred.basis.7, col = 'blue')
lines(Temp.sort$Temp, pred.basis.9, col = 'green')
lines(Temp.sort$Temp, pred.basis.20, col = 'yellow')
legend(x = 60, y = 150, legend = c(
"Cubic poly", "Cubic Spline 5 df",
"Cubic Spline 7 df", "Cubic Spline 9 df", "Cubic Spline 20 df"
),
lty = "solid", col = c('black', 'red', 'blue', 'green', 'yellow') lwd = 2
### Fit polynomial regression models
fit.poly.3 <- lm(Ozone ~ poly(Temp, degree = 3), data = AQ)
### Fit basis splines
fit.basis.5 <- lm(Ozone ~ bs(Temp, degree = 5), data = AQ)
fit.basis.7 <- lm(Ozone ~ bs(Temp, degree = 7), data = AQ)
fit.basis.9 <- lm(Ozone ~ bs(Temp, degree = 9), data = AQ)
fit.basis.20 <- lm(Ozone ~ bs(Temp, degree = 20), data = AQ)
### Predicting
Temp.sort <- data.frame(Temp = sort(AQ$Temp))
pred.poly.3 <- predict(fit.poly.3, Temp.sort)
pred.basis.5 <- predict(fit.basis.5, Temp.sort)
pred.basis.7 <- predict(fit.basis.7, Temp.sort)
pred.basis.9 <- predict(fit.basis.9, Temp.sort)
pred.basis.20 <- predict(fit.basis.20, Temp.sort)
### Plots
with(AQ, plot(Temp, Ozone))
lines(Temp.sort$Temp, pred.poly.3)
lines(Temp.sort$Temp, pred.basis.5, col = 'red')
lines(Temp.sort$Temp, pred.basis.7, col = 'blue')
lines(Temp.sort$Temp, pred.basis.9, col = 'green')
lines(Temp.sort$Temp, pred.basis.20, col = 'yellow')
legend(x = 60, y = 150, legend = c(
"Cubic poly", "Cubic Spline 5 df",
"Cubic Spline 7 df", "Cubic Spline 9 df", "Cubic Spline 20 df"
),
lty = "solid", col = c('black', 'red', 'blue', 'green', 'yellow'), lwd = 2
)
### Fit polynomial regression models
fit.poly.3 <- lm(Ozone ~ poly(Temp, degree = 3), data = AQ)
### Fit basis splines
fit.basis.5 <- lm(Ozone ~ bs(Temp, degree = 5), data = AQ)
fit.basis.7 <- lm(Ozone ~ bs(Temp, degree = 7), data = AQ)
fit.basis.9 <- lm(Ozone ~ bs(Temp, degree = 9), data = AQ)
fit.basis.20 <- lm(Ozone ~ bs(Temp, degree = 20), data = AQ)
### Predicting
Temp.sort <- data.frame(Temp = sort(AQ$Temp))
pred.poly.3 <- predict(fit.poly.3, Temp.sort)
pred.basis.5 <- predict(fit.basis.5, Temp.sort)
pred.basis.7 <- predict(fit.basis.7, Temp.sort)
pred.basis.9 <- predict(fit.basis.9, Temp.sort)
pred.basis.20 <- predict(fit.basis.20, Temp.sort)
### Plots
with(AQ, plot(Temp, Ozone))
lines(Temp.sort$Temp, pred.poly.3)
lines(Temp.sort$Temp, pred.basis.5, col = 'red')
lines(Temp.sort$Temp, pred.basis.7, col = 'blue')
lines(Temp.sort$Temp, pred.basis.9, col = 'green')
lines(Temp.sort$Temp, pred.basis.20, col = 'yellow')
legend(x = 55, y = 180, legend = c(
"Cubic poly", "Cubic Spline 5 df",
"Cubic Spline 7 df", "Cubic Spline 9 df", "Cubic Spline 20 df"
),
lty = "solid", col = c('black', 'red', 'blue', 'green', 'yellow'), lwd = 2
)
### Fit polynomial regression models
fit.poly.3 <- lm(Ozone ~ poly(Temp, degree = 3), data = AQ)
### Fit basis splines
fit.basis.5 <- lm(Ozone ~ bs(Temp, degree = 5), data = AQ)
fit.basis.7 <- lm(Ozone ~ bs(Temp, degree = 7), data = AQ)
fit.basis.9 <- lm(Ozone ~ bs(Temp, degree = 9), data = AQ)
fit.basis.20 <- lm(Ozone ~ bs(Temp, degree = 20), data = AQ)
### Predicting
Temp.sort <- data.frame(Temp = sort(AQ$Temp))
pred.poly.3 <- predict(fit.poly.3, Temp.sort)
pred.basis.5 <- predict(fit.basis.5, Temp.sort)
pred.basis.7 <- predict(fit.basis.7, Temp.sort)
pred.basis.9 <- predict(fit.basis.9, Temp.sort)
pred.basis.20 <- predict(fit.basis.20, Temp.sort)
### Plots
with(AQ, plot(Temp, Ozone))
lines(Temp.sort$Temp, pred.poly.3)
lines(Temp.sort$Temp, pred.basis.5, col = 'red')
lines(Temp.sort$Temp, pred.basis.7, col = 'blue')
lines(Temp.sort$Temp, pred.basis.9, col = 'green')
lines(Temp.sort$Temp, pred.basis.20, col = 'yellow')
legend(x = 55, y = 180, legend = c(
"Cubic poly", "Cubic Spline 5 df",
"Cubic Spline 7 df", "Cubic Spline 9 df", "Cubic Spline 20 df"
),
lty = "solid", col = c('black', 'red', 'blue', 'green', 'yellow'), lwd = 2
)
### Fit polynomial regression models
fit.poly.3 <- lm(Ozone ~ poly(Temp, degree = 3), data = AQ)
### Fit basis splines
fit.basis.5 <- lm(Ozone ~ bs(Temp, degree = 5), data = AQ)
fit.basis.7 <- lm(Ozone ~ bs(Temp, degree = 7), data = AQ)
fit.basis.9 <- lm(Ozone ~ bs(Temp, degree = 9), data = AQ)
fit.basis.20 <- lm(Ozone ~ bs(Temp, degree = 20), data = AQ)
### Predicting
Temp.sort <- data.frame(Temp = sort(AQ$Temp))
pred.poly.3 <- predict(fit.poly.3, Temp.sort)
pred.basis.5 <- predict(fit.basis.5, Temp.sort)
pred.basis.7 <- predict(fit.basis.7, Temp.sort)
pred.basis.9 <- predict(fit.basis.9, Temp.sort)
pred.basis.20 <- predict(fit.basis.20, Temp.sort)
### Plots
with(AQ, plot(Temp, Ozone))
lines(Temp.sort$Temp, pred.poly.3)
lines(Temp.sort$Temp, pred.basis.5, col = 'red')
lines(Temp.sort$Temp, pred.basis.7, col = 'blue')
lines(Temp.sort$Temp, pred.basis.9, col = 'green')
lines(Temp.sort$Temp, pred.basis.20, col = 'brown')
legend(x = 55, y = 180, legend = c(
"Cubic poly", "Cubic Spline 5 df",
"Cubic Spline 7 df", "Cubic Spline 9 df", "Cubic Spline 20 df"
),
lty = "solid", col = c('black', 'red', 'blue', 'green', 'brown'), lwd = 2
)
?legend
?lines
### Fit polynomial regression models
fit.poly.3 <- lm(Ozone ~ poly(Temp, degree = 3), data = AQ)
### Fit basis splines
fit.basis.5 <- lm(Ozone ~ bs(Temp, degree = 5), data = AQ)
fit.basis.7 <- lm(Ozone ~ bs(Temp, degree = 7), data = AQ)
fit.basis.9 <- lm(Ozone ~ bs(Temp, degree = 9), data = AQ)
fit.basis.20 <- lm(Ozone ~ bs(Temp, degree = 20), data = AQ)
### Predicting
Temp.sort <- data.frame(Temp = sort(AQ$Temp))
pred.poly.3 <- predict(fit.poly.3, Temp.sort)
pred.basis.5 <- predict(fit.basis.5, Temp.sort)
pred.basis.7 <- predict(fit.basis.7, Temp.sort)
pred.basis.9 <- predict(fit.basis.9, Temp.sort)
pred.basis.20 <- predict(fit.basis.20, Temp.sort)
### Plots
with(AQ, plot(Temp, Ozone))
lines(Temp.sort$Temp, pred.poly.3)
lines(Temp.sort$Temp, pred.basis.5, col = 'red')
lines(Temp.sort$Temp, pred.basis.7, col = 'blue')
lines(Temp.sort$Temp, pred.basis.9, col = 'green')
lines(Temp.sort$Temp, pred.basis.20, col = 'gold')
legend(x = 55, y = 180, legend = c(
"Cubic poly", "Cubic Spline 5 df",
"Cubic Spline 7 df", "Cubic Spline 9 df", "Cubic Spline 20 df"
),
lty = "solid", col = c('black', 'red', 'blue', 'green', 'gold'), lwd = 2
)
